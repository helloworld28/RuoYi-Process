<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.process.mapper.BizCustomerMapper">
    
    <resultMap type="BizCustomer" id="BizCustomerResult">
        <result property="id"    column="id"    />
        <result property="customerId"    column="customer_id"    />
        <result property="name"    column="name"    />
        <result property="phone"    column="phone"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createBy"    column="create_by"    />
        <result property="updateBy"    column="update_by"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectBizCustomerVo">
        select id, customer_id, name, phone, create_time, update_time, create_by, update_by, remark from biz_customer
    </sql>

    <select id="selectBizCustomerList" parameterType="BizCustomer" resultMap="BizCustomerResult">
        <include refid="selectBizCustomerVo"/>
        <where>  
            <if test="customerId != null  and customerId != ''"> and customer_id = #{customerId}</if>
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="phone != null  and phone != ''"> and phone like concat('%', #{phone}, '%')</if>
        </where>
    </select>
    
    <select id="selectBizCustomerById" parameterType="Long" resultMap="BizCustomerResult">
        <include refid="selectBizCustomerVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertBizCustomer" parameterType="BizCustomer" useGeneratedKeys="true" keyProperty="id">
        insert into biz_customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerId != null  and customerId != ''">customer_id,</if>
            <if test="name != null  and name != ''">name,</if>
            <if test="phone != null  and phone != ''">phone,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="remark != null  and remark != ''">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerId != null  and customerId != ''">#{customerId},</if>
            <if test="name != null  and name != ''">#{name},</if>
            <if test="phone != null  and phone != ''">#{phone},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
         </trim>
    </insert>

    <update id="updateBizCustomer" parameterType="BizCustomer">
        update biz_customer
        <trim prefix="SET" suffixOverrides=",">
            <if test="customerId != null  and customerId != ''">customer_id = #{customerId},</if>
            <if test="name != null  and name != ''">name = #{name},</if>
            <if test="phone != null  and phone != ''">phone = #{phone},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBizCustomerById" parameterType="Long">
        delete from biz_customer where id = #{id}
    </delete>

    <delete id="deleteBizCustomerByIds" parameterType="String">
        delete from biz_customer where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    
</mapper>